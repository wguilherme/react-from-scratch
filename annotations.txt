// init nodejs project
yarn init -y

// add react
yarn add react
yarn add react-dom

// add babel libs
yarn add @babel/core @babel/cli @babel/preset-env -D 

// init folder structure
create public and src folders
create .gitignore

// config babel
create babel.config.js file
with
module.exports presets babel preset env

@babel/core: lib core
@babel/cli: run from command line (yarn babel -h to see all commands)
@babel/preset-env: identify environment and setup compiler in the better way

// test babel  from command line:
yarn babel src/index.js --out-file dist/bundle.js  

bundle.js // conventional file name for 'converted' file with babel

// add babel preset for react for support html in js
// now can run babel with react syntax
yarn add @babel/preset-react -D   

// add the react-preset in babel.config.js presets array


// change src/index.js to src/index.jsx (just for convention)
yarn babel src/index.jsx --out-file dist/bundle.js  

// add webpack
// add loaders for files like png, sass, js, jpg, etc...
yarn add webpack webpack-cli -D

// add webpack.config.js with module.exports = {}
// add entry param with src/index.jsx file
// add output path and filename

// add resolve param with extensions array
// add .js and .jsx in extensions

// add module param
// in rules, add the webpack rules for react (test/exclude)

// add babel loader
yarn add babel-loader -D

// add babel-loader to webpack rules 

// testing run webpack in command line
yarn webpack

// in src/index.jsx 

```
import React from 'react'
import { render } from 'react-dom'

render(<h1>Test</h1>, document.getElementById('root'))
```

in index.html, add tag script before close body tag importing bundled webpack js
<script src="../dist/bundle.js"></script>

// It should be working at this point.
// run webpack
yarn webpack

//open public/index.html with browser to see render content. (ex.: h1 title Test)

//updating import. React  v17+ does't need to import react in every file. 
//add this in babel.config.js
// change from 
```
'@babel/preset-react' 
```
to

```
['@babel/preset-react',{
  runtime: 'automatic'
}]
```


//chore: add html webpack plugin to inject bundled conde into html
yarn add html-webpack-plugin -D        
// add it into webpack plugins:

```
plugins: [
  new HtmlWebpackPlugin({
    template: path.resolve(__dirname, 'public', 'index.html')

  })
]
```

// add webpack-dev-server for fast refresh. (re-bundle)
yarn add webpack-dev-server -D
// add config into webpack.config.js
```
// old versions use contentBase instead static param
devServer: {
  static: path.resolve(__dirname, 'public', 'index.html'),
}
```

// now run, instead  yarn webpack:
yarn webpack serve
// It should run the application into some localhost port. (default is 8080)

//add sourceMaps to see original code when debugging / devmode
// add this param into webpack.config.js 
```
devtool: 'eval-source-map',
```


// add  devTool and mode base if env is development + add cross-env for multiplatform

// tip: in terminal can run before the code:
// works only in UNIX systems
NODE_ENV=production yarn webpack serve




























